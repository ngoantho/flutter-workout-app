// Mocks generated by Mockito 5.4.5 from annotations
// in homework/test/history_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:homework/dao/exercise_results.dart' as _i5;
import 'package:homework/dao/workouts.dart' as _i2;
import 'package:homework/models/exercise_result.dart' as _i6;
import 'package:homework/models/workout.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [WorkoutDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockWorkoutDao extends _i1.Mock implements _i2.WorkoutDao {
  MockWorkoutDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.Workout>> getAllWorkouts() => (super.noSuchMethod(
        Invocation.method(
          #getAllWorkouts,
          [],
        ),
        returnValue: _i3.Future<List<_i4.Workout>>.value(<_i4.Workout>[]),
      ) as _i3.Future<List<_i4.Workout>>);

  @override
  _i3.Future<List<_i4.Workout>> getWorkoutsByDate(
    int? year,
    int? month,
    int? day,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWorkoutsByDate,
          [
            year,
            month,
            day,
          ],
        ),
        returnValue: _i3.Future<List<_i4.Workout>>.value(<_i4.Workout>[]),
      ) as _i3.Future<List<_i4.Workout>>);

  @override
  _i3.Future<int> addWorkout(_i4.Workout? workout) => (super.noSuchMethod(
        Invocation.method(
          #addWorkout,
          [workout],
        ),
        returnValue: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);
}

/// A class which mocks [ExerciseResultDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockExerciseResultDao extends _i1.Mock implements _i5.ExerciseResultDao {
  MockExerciseResultDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i6.ExerciseResult>> getExerciseResultsByWorkoutId(
          int? workoutId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getExerciseResultsByWorkoutId,
          [workoutId],
        ),
        returnValue:
            _i3.Future<List<_i6.ExerciseResult>>.value(<_i6.ExerciseResult>[]),
      ) as _i3.Future<List<_i6.ExerciseResult>>);

  @override
  _i3.Future<List<_i6.ExerciseResult>> getAllExerciseResults() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllExerciseResults,
          [],
        ),
        returnValue:
            _i3.Future<List<_i6.ExerciseResult>>.value(<_i6.ExerciseResult>[]),
      ) as _i3.Future<List<_i6.ExerciseResult>>);

  @override
  _i3.Future<int> addExerciseResult(_i6.ExerciseResult? exerciseResult) =>
      (super.noSuchMethod(
        Invocation.method(
          #addExerciseResult,
          [exerciseResult],
        ),
        returnValue: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);
}
